@using Microsoft.AspNetCore.Components.Authorization;
@inherits BaseLayout

<main class="main" style=@_paddingLeftCssAttribute>
    <TopAndSideMenu
        OnSideMenuSizeChanged=@OnMenuSizeChanged
        MenuIconUrl=@($"{Config.BaseAssetsPath}/images/icons/design/grid.png")
        LogoName="Kinergize"
        LogoImageUrl=@($"{Config.BaseAssetsPath}/images/icons/design/mask.png")
        TopMenuButtonGroups=@TopMenuButtonGroups
        OnButtonClick=@OnMenuButtonClick />

    <div class="main-content">
        @Body
    </div>

</main>

@code {
    [Inject] public AuthenticationStateProvider Auth { get; set; }
    [Inject] public NavigationManager Navigation { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Auth.AuthenticationStateChanged += OnAuthenticationStateChanged;
        TopMenuButtonGroups = await GetTopMenuButtonGroups();
    }

    private async void OnAuthenticationStateChanged(Task<AuthenticationState> task)
    {
        //var state = await task;
        //await InvokeAsync(StateHasChanged);
        //Console.WriteLine("hoho");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        TopMenuButtonGroups = await GetTopMenuButtonGroups();
    }

    private async Task OnMenuButtonClick(string id)
    {
        if (id == "login")
        {
            Navigation.NavigateTo("login");
            return;
        }

        if (id == "dashboard")
            Navigation.NavigateTo(id);
    }

    HorizontalMenu.ButtonGroup[] TopMenuButtonGroups { get; set; }

    private async Task<HorizontalMenu.ButtonGroup[]> GetTopMenuButtonGroups()
    {
        var res = new List<HorizontalMenu.Button>();
        //if (await Auth.IsSignedIn())
            res.Add(new("dashboard", "Dashboard", IconUrl: $"{Config.BaseAssetsPath}/images/icons/design/grid.png"));

        res.Add(new("login", await Auth.GetLabel(), IconUrl: $"{Config.BaseAssetsPath}/images/icons/basic/exit.png"));

        return new HorizontalMenu.ButtonGroup[] { new(res.ToArray()) };
    }
}
